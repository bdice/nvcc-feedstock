{% set name = "nvcc" %}
{% set number = 22 %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% set cuda_minor = 0 %}
{% set cuda_major_minor = (0, 0) %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0]|int %}
{% set cuda_minor = environ.get("cuda_compiler_version", "11.8").split(".")[1]|int %}
{% set cuda_major_minor = (cuda_major, cuda_minor) %}
{% endif %}

package:
  name: "{{ name }}"

build:
  number: {{ number }}
{% if cuda_major == 0
    or (cross_target_platform == "linux-ppc64le" and cuda_major_minor < (10, 2))
    or (cross_target_platform == "linux-aarch64" and (cuda_major_minor < (11, 0) or arm_variant_type != "sbsa")) %}
  skip: true
{% endif %}

outputs:
  - name: "{{ name }}_{{ cross_target_platform }}"
    version: "{{ cuda_compiler_version }}"
    number: {{ number }}
    script: linux/install_nvcc.sh     # [linux]
    script: windows/install_nvcc.bat  # [win]
    build:
      ignore_run_exports:
        - libgcc-ng
      run_exports:
        strong:
{% if cuda_major_minor < (11, 2) %}
          - cudatoolkit {{ cuda_compiler_version }}|{{ cuda_compiler_version }}.*
{% else %}
          - cudatoolkit >={{ cuda_compiler_version }},<{{ cuda_major + 1 }}
{% endif %}
          - __glibc >=2.17                           # [linux and cdt_name == "cos7"]
    requirements:
      build:      # [win]
        - m2-sed  # [win]
      host:
        # Needed to symlink libcuda into sysroot libs.
        - {{ c_compiler }}_{{ cross_target_platform }} {{ c_compiler_version }}.*       # [linux]
        - {{ c_compiler }}_{{ cross_target_platform }}                                  # [win]
        - sysroot_{{ cross_target_platform }} 2.17   # [linux and cdt_name == "cos7"]
        - __glibc >=2.17                             # [linux and cdt_name == "cos7"]
      run:
        - sed                                        # [linux]
        - sysroot_{{ cross_target_platform }} 2.17   # [linux and cdt_name == "cos7"]
        - __glibc >=2.17                             # [linux and cdt_name == "cos7"]
    test:
      requires:
        - {{ c_compiler }}_{{ cross_target_platform }} {{ c_compiler_version }}.*       # [linux]
        - {{ c_compiler }}_{{ cross_target_platform }}                                  # [win]
        # Host code is forwarded to a C++ compiler
        - {{ cxx_compiler }}_{{ cross_target_platform }} {{ cxx_compiler_version }}.*   # [linux]
        - {{ cxx_compiler }}_{{ cross_target_platform }}                                # [win]
        - sysroot_{{ cross_target_platform }} 2.17   # [linux and cdt_name == "cos7"]
        - __glibc >=2.17                             # [linux and cdt_name == "cos7"]
      files:
        - test.cu
        - linux/test_nvcc.sh     # [linux]
        - windows\test_nvcc.bat  # [win]
      commands:
        - bash linux/test_nvcc.sh  # [linux and target_platform == cross_target_platform]
        - windows\test_nvcc.bat    # [win and target_platform == cross_target_platform]
    about:
      home: https://github.com/conda-forge/nvcc-feedstock
      license: BSD-3-Clause
      license_file: LICENSE.txt
      summary: A meta-package to enable the right nvcc.

about:
  home: https://github.com/conda-forge/nvcc-feedstock
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: A meta-package to enable the right nvcc.

extra:
  recipe-maintainers:
    - dillon-cullinan
    - isuruf
    - jakirkham
    - kkraus14
    - mike-wendt
    - raydouglass
    - jaimergp
    - leofang
